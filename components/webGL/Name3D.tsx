/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React from 'react';
import { useGLTF, useTexture } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    windows: THREE.Mesh;
    buildings: THREE.Mesh;
  };
  materials: {};
};

export default function Name3D(props: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/name3D.glb') as GLTFResult;
  const bakedTexture = useTexture('/bakedTexture.jpg');
  const windowTexture = useTexture('/matcap.png');
  bakedTexture.flipY = false;

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.windows.geometry} position={[-0.03, 0.45, 0.23]}>
        <meshMatcapMaterial matcap={windowTexture} />
      </mesh>
      <mesh geometry={nodes.buildings.geometry}>
        <meshBasicMaterial map={bakedTexture} />
      </mesh>
    </group>
  );
}

useGLTF.preload('/name3D.glb');
