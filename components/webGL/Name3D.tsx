/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Ground001: THREE.Mesh;
  };
  materials: {};
};

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/name3D.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Ground001.geometry}>
        <meshBasicMaterial color={'pink'} />
      </mesh>
    </group>
  );
}

useGLTF.preload('/name3D.glb');
