/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useEffect } from 'react';
import { Center, useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import resizeText from '../utils/resizeText';

type GLTFResult = GLTF & {
  nodes: {
    my: THREE.Mesh;
    work: THREE.Mesh;
  };
};

export default function MyWorkText(props: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/models/myWork.glb') as GLTFResult;
  const textRef = React.useRef<THREE.Group>(null);

  useEffect(() => {
    resizeText(textRef);
    addEventListener('resize', () => {
      resizeText(textRef);
    });
  }, []);

  return (
    <Center
      ref={textRef}
      position={[0, 0, -50]}
      rotation-x={Math.PI * 0.5}
      scale={20}
    >
      <group {...props} dispose={null}>
        <mesh geometry={nodes.my.geometry}>
          <meshBasicMaterial color="#ffffff" />
        </mesh>
        <mesh geometry={nodes.work.geometry}>
          <meshBasicMaterial color="#ffffff" />
        </mesh>
      </group>
    </Center>
  );
}

useGLTF.preload('/models/myWork.glb');
