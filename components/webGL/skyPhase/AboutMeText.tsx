/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useEffect } from 'react';
import { Center, useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import resizeText from '../../utils/resizeText';

type GLTFResult = GLTF & {
  nodes: {
    Text: THREE.Mesh;
  };
};

export default function AboutMeText(props: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/models/aboutMe.glb') as GLTFResult;
  const textRef = React.useRef<THREE.Group>(null);

  useEffect(() => {
    resizeText(textRef);
    addEventListener('resize', () => {
      resizeText(textRef);
    });

    return () => {
      removeEventListener('resize', () => {
        resizeText(textRef);
      });
    };
  }, []);
  return (
    <Center
      ref={textRef}
      position={[0, 35, -30.05]}
      rotation-x={Math.PI * 0.5}
      scale={20}
    >
      <group {...props} dispose={null}>
        <mesh geometry={nodes.Text.geometry}>
          <meshBasicMaterial color="#FCFFEB" />
        </mesh>
      </group>
    </Center>
  );
}

useGLTF.preload('/models/aboutMe.glb');
