/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React from 'react';
import { useGLTF, useTexture } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    windows: THREE.Mesh;
    waters: THREE.Mesh;
    buildings: THREE.Mesh;
  };
  materials: {};
};

export default function Buildings() {
  const { nodes } = useGLTF('/models/buildings.glb') as GLTFResult;
  const buildingTexture = useTexture('/textures/bakedBuildings.jpg');
  const waterTexture = useTexture('/textures/bakedWater.png');
  const windowTexture = useTexture('/textures/matcap.jpg');
  buildingTexture.flipY = false;
  waterTexture.flipY = false;

  // useFrame((state) => {
  //   console.log(state.camera.position);
  //   console.log(state.camera.rotation);
  // });

  return (
    <group dispose={null}>
      <mesh geometry={nodes.windows.geometry}>
        <meshMatcapMaterial matcap={windowTexture} />
      </mesh>
      <mesh geometry={nodes.waters.geometry}>
        <meshBasicMaterial map={waterTexture} transparent />
      </mesh>
      <mesh geometry={nodes.buildings.geometry}>
        <meshBasicMaterial map={buildingTexture} />
      </mesh>
    </group>
  );
}

useGLTF.preload('/models/buildings.glb');
